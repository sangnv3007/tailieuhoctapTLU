/*1 TRIGGER
Câu 1: Cho bảng NHANVIEN (MaNV, Hoten, Ngaysinh,...).Viết một trigger để đảm
bảo rằng khi thêm một nhân viên mới vào thì tuổi của nhân viên không được >=45
*/
GO
CREATE TRIGGER TG_INSERT_TUOI
ON QUANLYNV.DBO.NHANVIEN 
AFTER INSERT
AS
BEGIN
DECLARE @TUOI_NVMOI INT 
SET @TUOI_NVMOI=(SELECT DATEDIFF(YYYY,NGAYSINH,GETDATE()) AS TUOI_NV FROM inserted)
IF(@TUOI_NVMOI>=45)
    BEGIN
    PRINT(N'NHÂN VIÊN KHÔNG ĐƯỢC QUÁ 45 TUỔI')
    END
    ROLLBACK TRANSACTION
END
INSERT NHANVIEN
VALUES('NV102',N'NGUYEN VAN S','7/30/1963',N'BAC NINH','MP1',5000000,'TP1')
--CÂU 2. Tạo trigger để tránh xoá 2 bản ghi trong bảng Nhanvien đồng thời
GO 
CREATE TRIGGER CHECK_DELETE
ON NHANVIEN
AFTER DELETE
AS 
BEGIN
IF((SELECT COUNT(*) FROM deleted)>=2)
    PRINT(N'KHÔNG ĐƯỢC XÓA 2 BẢN GHI CÙNG 1 LÚC')
    ROLLBACK TRANSACTION
END
GO
DELETE FROM NHANVIEN
/*
Tạo UPDATE trigger đảm bảo rằng cột lương không được lớn hơn 10.000.000 và
ngày sinh không lớn hơn ngày hiện tại.
*/
GO 
CREATE TRIGGER CHECK_SALARY_AND_AGE
ON NHANVIEN
FOR UPDATE
AS
IF((SELECT LUONG FROM inserted) >10000000 OR ((SELECT NGAYSINH FROM inserted) >GETDATE()))
    BEGIN
    PRINT(N'VUI LÒNG KIỂM TRA LẠI LƯƠNG VÀ NGÀY SINH CỦA NHÂN VIÊN')
    ROLLBACK TRANSACTION 
    END
GO
UPDATE NHANVIEN
SET LUONG=100000000 WHERE MANV='NV1'
SELECT * FROM NHANVIEN
/*
Câu 4: Tạo một trigger không cho phép cập nhật cột Ngaysinh trong bảng Nhanvien.
*/
GO
CREATE TRIGGER CHECK_UPADTE_NGAYSINH
ON NHANVIEN
FOR UPDATE
AS BEGIN
IF UPDATE(NGAYSINH)
    PRINT(N'KHÔNG ĐƯỢC CẬP NHẬT CỘT NGÀY SINH')
    ROLLBACK TRAN
    END
GO
UPDATE NHANVIEN
SET NGAYSINH='1/1/2000' WHERE MANV='NV1'
/*Câu 5: Hiển thị các trigger trong bảng Nhanvien
*/
GO
EXECUTE sp_helptrigger NHANVIENJ
/*
Câu 6: tạo trigger để kiểm tra dữ liệu nhập vào cột MaP trong bảng Nhanvien phải là
dữ liệu đã tồn tại trong cột MaP của bảng Phong
*/
GO
CREATE TRIGGER CHECK_MAP
ON NHANVIEN
FOR INSERT 
AS
IF((SELECT MAP FROM inserted ) NOT IN (SELECT MAP FROM PHONG))
    BEGIN
    PRINT(N'MÃ PHÒNG KHÔNG TỒN TẠI. VUI LÒNG KIỂM TRA LẠI !!!')
    ROLLBACK TRANSACTION
    END
GO
INSERT NHANVIEN
VALUES('NV11',N'NGUYỄN TRƯỜNG SƠN','1/30/2000',N'VĨNH PHÚC','MP1191',5000000,'TP1')
SELECT * FROM NHANVIEN
--VÔ HIỆU HÓA KHÓA NGOẠI CỦA BẢNG NHÂN VIÊN ĐỂ KHI THÊM BẢN GHI ĐỂ KIỂM TRA TRIGGER KHÔNG BỊ ẢNH HƯỞNG BỞI RÀNG BUỘC KHÓA NGOẠI
ALTER TABLE NHANVIEN
NOCHECK CONSTRAINT FK_MAP
/*
Câu 7: Tạo một cascade trigger để khi xóa một phòng trong bảng Phong thì toàn bộ
nhân viên của phòng đó cũng bị xóa. Sau đó trigger này sẽ kích hoạt hoạt hành động
hiển thị thông tin của những nhân viên còn lại.
*/
GO
CREATE TRIGGER CASCADE_DELETE
ON PHONG
FOR DELETE
AS
DELETE NHANVIEN FROM NHANVIEN,DELETED
WHERE NHANVIEN.MAP=deleted.MAP
GO 
CREATE TRIGGER DELETE_PHONG
ON Nhanvien
FOR DELETE
AS
BEGIN
SELECT * FROM PHONG
SELECT * FROM NHANVIEN
END
--THỬ XÓA 1 PHÒNG CÓ MP ='MP3'
GO
DELETE FROM PHONG
WHERE MAP='MP3'
--VÔ HIỆU HÓA KHÓA NGOẠI CỦA BẢNG NV_DA ĐỂ KHI XÓA BẢN GHI ĐỂ KIỂM TRA TRIGGER KHÔNG BỊ ẢNH HƯỞNG RÀNG BUỘC KHÓA NGOẠI 
ALTER TABLE NV_DA
NOCHECK CONSTRAINT FK_MADA_NV
ALTER TABLE NV_DA
NOCHECK CONSTRAINT FK_MANV_NV

/*
Câu 8: Tạo một view View_Cau8 chứa MaNV, Hoten, TenP. Thử thực hiện việc
thêm/xóa/sửa trên VIEW đó. Từ đó viết instead of trigger để thay thế cho những tác
insert, update, delete nguyên thủy.
*/
GO
CREATE VIEW VIEW_CAU8
AS
SELECT NHANVIEN.MANV,NHANVIEN.HOTEN,PHONG.TENP FROM NHANVIEN,PHONG
WHERE NHANVIEN.MAP=PHONG.MAP
--THỬ THÊM SỬA XÓA TRÊN VIEW VIEW_CAU8
--THÊM VÀO VIEW
GO
INSERT VIEW_CAU8
VALUES('NV11',N'NGUYỄN TRƯỜNG SƠN','PHONG6')
--XÓA 
DELETE FROM VIEW_CAU8
WHERE MANV='NV1'
--UPDATE
UPDATE VIEW_CAU8
SET TENP='PHONG11'
WHERE MANV='NV1'
-->KHÔNG THỂ THÊM,XÓA VÀO VIEW DO THÔNG TIN SINH VIÊN LIÊN QUAN ĐẾN NHIỀU BẢNG NHƯNG UPADTE THÌ VẪN CÓ THỂ THỰC HIỆN ĐƯỢC

--VIẾT 1 INSTEAD OF TRIGGER THAY THẾ THAO TÁC INSERT(KHÔNG THÊM BẢN GHI VÀO CSDL)
GO
CREATE TRIGGER INSERT_INSTEADOFTRIGEER
ON PHONG
INSTEAD OF INSERT
AS BEGIN
SELECT MAP AS MAP_INSERTED,TENP AS TENP_INSERTED FROM inserted
SELECT MAP,TENP FROM PHONG
END
GO
--VIẾT 1 INSTEAD OF TRIGGER THAY THẾ THAO TÁC DELETE(KHÔNG THÊM BẢN GHI VÀO CSDL)
CREATE TRIGGER DELETE_INSTEADOFTRIGEER
ON PHONG
INSTEAD OF DELETE
AS BEGIN
SELECT MAP AS MAP_DELETE,TENP AS TENP_DELETE FROM deleted
SELECT MAP,TENP FROM PHONG
END
GO
--VIẾT 1 INSTEAD OF TRIGGER THAY THẾ THAO TÁC UPDATE(KHÔNG THÊM BẢN GHI VÀO CSDL)
CREATE TRIGGER UPDATE_INSTEADOFTRIGEER
ON PHONG
INSTEAD OF UPDATE
AS BEGIN
SELECT MAP AS MAP_INSERTED,TENP AS TENP_INSERTED FROM inserted
SELECT MAP AS MAP_DELETE,TENP AS TENP_DELETE FROM deleted
SELECT MAP,TENP FROM PHONG
END
--
GO 
INSERT PHONG
VALUES('MP7','PHONG7')
--
GO 
UPDATE PHONG
SET TENP='PHONG11'
WHERE MAP='MP1'
--
GO 
DELETE FROM PHONG
WHERE MAP='MP1'

