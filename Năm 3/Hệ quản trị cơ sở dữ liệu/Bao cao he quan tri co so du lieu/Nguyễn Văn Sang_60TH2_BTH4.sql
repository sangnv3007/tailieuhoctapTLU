/*
Cho CDSL QLNV gồm:
NHANVIEN (MaNV, Hoten, Ngaysinh, Diachi, MaP)
PHONG(MaP, TenP)
NGUOITHAN(MaNV, HotenNT)
DUAN(MaDA, TenDA)
NHANVIEN_DUAN (MaNV, MaDA)
*/
--Câu 1: Tạo các bảng trên với đầy đủ khóa chính và khóa ngoại
--TẠO CSDL
CREATE DATABASE BAI_TH4
--TẠO BẢNG PHÒNG
CREATE TABLE PHONG
(
    MAP NVARCHAR(10) NOT NULL PRIMARY KEY,
    TENP NVARCHAR(50)
)
--TẠO BẢNG NHÂN VIÊN
CREATE TABLE NHANVIEN
(
    MANV NVARCHAR(10) NOT NULL PRIMARY KEY,
    HOTEN NVARCHAR(30),
    NGAYSINH DATE,
    DIACHI NVARCHAR(100),
    MAP NVARCHAR(10) NOT NULL,
    CONSTRAINT MAP_NV FOREIGN KEY(MAP) REFERENCES PHONG(MAP)
)
--TẠO BẢNG NGƯỜI THÂN
CREATE TABLE NGUOITHAN
(
    MANV NVARCHAR(10) NOT NULL,
    HOTENNT NVARCHAR(30),
    CONSTRAINT MANV_NGUOITHAN FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV)
)
--TẠO BẢNG DỰ ÁN
CREATE TABLE DUAN 
(
    MADA NVARCHAR(10) NOT NULL PRIMARY KEY,
    TENDA NVARCHAR(50)
)
--TẠO BẢNG NV_DA
CREATE TABLE NV_DA
(
    MANV NVARCHAR(10) NOT NULL,
    MADA NVARCHAR(10) NOT NULL,
    PRIMARY KEY(MANV,MADA),
    CONSTRAINT MANV_NVDA FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV),
    CONSTRAINT MADA_NVDA FOREIGN KEY(MADA) REFERENCES DUAN(MADA)
)
--Câu 2: Thêm vào bảng NHANVIEN ràng buộc không cho phép ngày sinh của nhân viên >ngày hiện tại
ALTER TABLE NHANVIEN
ADD CONSTRAINT CHECK_DATE CHECK(NGAYSINH<GETDATE())
--Câu 3: Thêm vào bảng NHANVIEN cột STT có giá trị đầu tiên=1, tự động tăng thêm 1 khi thêm mới mỗi nhân viên.
ALTER TABLE NHANVIEN
ADD STT INT NOT NULL IDENTITY(1,1) 
--Câu 4: Thêm vào bảng dự án cột Songaylam (cho biết số ngày làm của nhân viên trong dự án nào đó ) với giá trị mặc định là 30.
ALTER TABLE DUAN
ADD SONGAYLAM INT NOT NULL DEFAULT 30
--Câu 5: Thêm vào bảng NHANVIEN cột giới tính và chỉ được phép nhận một trong hai giá trị là “Nam” hoặc “Nữ”.
ALTER TABLE NHANVIEN
ADD GIOITINH NVARCHAR(5) CHECK(GIOITINH =N'NAM' OR GIOITINH=N'NỮ')
--Câu 6: Sử dụng INNER JOIN để cho biết MaNV, Hoten, MaDA của những nhân viên tham gia vào dự án.
SELECT NHANVIEN.MANV,NHANVIEN.HOTEN,NV_DA.MADA FROM NHANVIEN
INNER JOIN NV_DA ON NHANVIEN.MANV=NV_DA.MANV
--Câu 7: Trong câu 6, nếu thay bằng LEFT JOIN thì kết quả sẽ như thế nào?
SELECT NHANVIEN.MANV,NHANVIEN.HOTEN,NV_DA.MADA FROM NHANVIEN
LEFT JOIN NV_DA ON NHANVIEN.MANV=NV_DA.MANV
--> LEFT JOIN trả về tất cả giá trị từ bảng bên NHAN VIÊN, cộng với các giá trị phù hợp từ bảng NV_DA hoặc NULL trong trường hợp không có giá trị phù hợp nào.
--Câu 8: Hãy cho biết MaNV của những nhân viên không có người thân
SELECT MANV FROM NHANVIEN
WHERE MANV NOT IN(SELECT MANV FROM NGUOITHAN)
--Câu 9: Hãy cho biết MaNV của những nhân viên vừa có người thân vừa tham gia vào dự án
SELECT MANV FROM NHANVIEN
WHERE MANV IN (SELECT MANV FROM NGUOITHAN) AND MANV IN (SELECT MANV FROM NV_DA)
--Câu 10: Hãy cho biết những nhân viên hoặc có người thân hoặc tham gia vào dự án hoặc cả hai.
SELECT MANV FROM NHANVIEN
WHERE MANV IN (SELECT MANV FROM NGUOITHAN) OR MANV IN (SELECT MANV FROM NV_DA) 
OR (MANV IN (SELECT MANV FROM NGUOITHAN) AND MANV IN (SELECT MANV FROM NV_DA))
--Câu 11: Hãy cho biết phòng nào có số lượng nhân viên là đông nhất.
SELECT MAP,COUNT(MANV) AS SOLUONG_NV FROM NHANVIEN
GROUP BY MAP
HAVING COUNT(MANV)>=ALL(SELECT COUNT(MANV) FROM NHANVIEN GROUP BY MAP)
--Câu 12: Hãy cho biết nhân viên nào tham gia vào nhiều dự án nhất
SELECT MANV,COUNT(MADA) AS SL_DA FROM NV_DA
GROUP BY MANV
HAVING COUNT(MADA)>=ALL(SELECT COUNT(MADA) FROM NV_DA GROUP BY MANV)
--CÂU 13.Hãy cho biết MaNV, Hoten của những nhân viên thuộc phòng “Hành chính” (Sử dụng Inner Join).
SELECT MANV,HOTEN FROM NHANVIEN
INNER JOIN PHONG ON NHANVIEN.MAP=PHONG.MAP
WHERE TENP=N'HÀNH CHÍNH'
--Câu 14: Sử dụng SELECT...INTO...FROM để lấy dữ liệu MaNV, Hoten từ bảng NHANVIEN cho vào bảng TempNHANVIEN.
SELECT MANV,HOTEN INTO TEMPNHANVIEN FROM NHANVIEN
--CÂU 15.Lấy ra 5 bản ghi đầu tiên của bảng NHANVIEN
SELECT TOP 5 * FROM NHANVIEN
--THẾM DỮ LIỆU VÀO 2 BẢNG PHÒNG VÀ NHÂN VIÊN
INSERT PHONG
VALUES('MP1','PHONG1'),('MP2','PHONG2')
INSERT NHANVIEN
VALUES('1','SANG','1/1/2000','BN','MP1','NAM'),('2','SANG','1/1/2000','BN','MP1','NAM'),('3','SANG','1/1/2000','BN','MP1','NAM'),('4','SANG','1/1/2000','BN','MP1','NAM')
--Câu 16: Tạo một con trỏ để duyệt toàn bộ bản ghi trong bảng NHANVIEN
GO
DECLARE CS_NV CURSOR
DYNAMIC FORWARD_ONLY 
FOR 
SELECT MANV,HOTEN FROM NHANVIEN
OPEN CS_NV
--IN RA TOÀN BỘ BẢN GHI TRONG BẢNG NHÂN VIÊN
DECLARE @MANV NVARCHAR(10),@HOTEN NVARCHAR(30)--
FETCH NEXT FROM CS_NV INTO @MANV,@HOTEN --ĐỌC DÒNG ĐẦU TIÊN
WHILE(@@FETCH_STATUS=0)--VÒNG LẶP DỪNG KHI CÂU LỆNH FETCH THỰC HIỆN THÀNH CÔNG
BEGIN 
    PRINT (N'MÃ NV:'+CAST(@MANV AS CHAR(10)) + ' '+N'HOTEN :'+@HOTEN) --IN RA KẾT QUẢ MANV: HỌ TÊN:
    FETCH NEXT FROM CS_NV INTO @MANV,@HOTEN--ĐỌC DÒNG TIẾP THEO
END
CLOSE CS_NV --ĐÓNG CURSOR
DEALLOCATE CS_NV --GIẢI PHÓNG TÀI NGUYÊN
--Câu 17: Sử dụng con trỏ ở câu 16 để duyệt bản ghi thứ 3 từ dưới lên trong con trỏ đó.
GO
DECLARE CS_NV1 CURSOR --TẠO CON TRỎ CS_NV1
STATIC SCROLL --DỮ LIỆU ĐƯỢC CẬT NHẬT KHI DỮ LIỆU GỐC ĐƯỢC THAY ĐỔI VÀ CURSOR ĐƯỢC PHÉP DI CHUYỂN TỚI LUI,QUA LẠI
FOR 
SELECT MANV,HOTEN FROM NHANVIEN  --DỮ LIỆU TRỎ TỚI
OPEN CS_NV1 --MỞ CON TRỎ
DECLARE @MANV INT,@HOTEN NVARCHAR(100) --Khai báo biến @MANV, @HOTEN để lưu nội dung đọc
FETCH RELATIVE 3  FROM CS_NV1 INTO @MANV,@HOTEN --ĐỌC LÀ DÒNG THỨ 3 TỪ DƯỚI LÊN
WHILE(@@FETCH_STATUS=0) --VÒNG LẶP DỪNG KHI CÂU LỆNH FETCH THỰC HIỆN THÀNH CÔNG
BEGIN
    PRINT (N'MÃ NV:'+CAST(@MANV AS CHAR(10)) + ' '+N'HOTEN :'+@HOTEN) --IN RA KẾT QUẢ MANV: HỌ TÊN:
    FETCH PRIOR FROM CS_NV1 INTO @MANV,@HOTEN--FETCH PRIOR: Truy xuất hàng trước hàng  hiện tại
END
CLOSE CS_NV1 --ĐÓNG CURSOR
DEALLOCATE CS_NV1--GIẢI PHÓNG TÀI NGUYÊN
--Câu 18: Sử dụng con trỏ để in ra thông tin của các phòng theo định dạng sau:
--THÊM DỮ LIỆU VÀO BẢNG PHÒNG TRƯỚC
GO
INSERT PHONG
VALUES('HC',N'HÀNH CHÍNH'),('KHCN',N'KHOA HỌC CÔNG NGHỆ'),('KT',N'KỸ THUẬT'),('NS',N'NHÂN SỰ'),('TC',N'TÀI CHÍNH'),('TH1','TIN HỌC 1'),('TH2',N'TIN HỌC 2')
GO
DECLARE CS_PHONG CURSOR --TẠO CON TRỎ CS_PHONG
DYNAMIC FORWARD_ONLY --DỮ LIÊU ĐƯỢC UPDATE VÀ DUYỆT CÁC BẢN GHI TỪ ĐẦU TỚI CUỐI
FOR
SELECT MAP,TENP FROM PHONG --DỮ LIỆU TRỎ TỚI
OPEN CS_PHONG --MỞ CON TRỎ CS_PHONG
DECLARE @MAP NVARCHAR(10),@TENP NVARCHAR(50) --KHAI BÁO BIẾN @MAP,@TENP ĐỂ LƯU NỘI DUNG ĐỌC
FETCH NEXT FROM CS_PHONG INTO @MAP,@TENP --ĐỌC TỪ DÒNG ĐẦU TIÊN
WHILE(@@FETCH_STATUS=0) --VÒNG LẶP DỪNG KHI CÂU LỆNH FETCH THỰC HIỆN THÀNH CÔNG
BEGIN
    PRINT(N'MÃ PHÒNG: '+CAST(@MAP AS NVARCHAR(10))+' '+N'HỌ TÊN :'+@TENP)-- IN RA KẾT QUẢ TÊN PHÒNG: HOTEN:  
    FETCH NEXT FROM CS_PHONG INTO @MAP,@TENP --ĐỌC DÒNG TIẾP THEO
END
--ĐÓNG CON TRỎ VÀ GIẢI PHÓNG TÀI NGUYÊN
CLOSE CS_PHONG
DEALLOCATE CS_PHONG