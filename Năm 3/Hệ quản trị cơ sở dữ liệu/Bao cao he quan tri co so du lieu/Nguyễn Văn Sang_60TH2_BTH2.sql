--Cho CSDL QuanlyNV:
CREATE DATABASE QUANLYNV
--TAO BANG Phong (MaP, TenP)
CREATE TABLE PHONG
(
    MAP NCHAR(10) NOT NULL PRIMARY KEY,
    TENP NCHAR(30)
)
--TAO BANG Nhanvien (MaNV, Hoten, Ngaysinh, Diachi, MaP, Luong, MaTP)
CREATE TABLE NHANVIEN
(
    MANV NCHAR(10) NOT NULL PRIMARY KEY,
    HOTEN NCHAR(20),
    NGAYSINH DATE,
    DIACHI NCHAR(30),
    MAP NCHAR(10) NOT NULL,
    LUONG FLOAT,
    MATP NCHAR(10),
    CONSTRAINT FK_MAP FOREIGN KEY(MAP) REFERENCES PHONG(MAP)
)
--TAO BANG Duan (MaDA, Ngaybatdau, Ngayketthuc)
CREATE TABLE DUAN
(
    MADA NCHAR(10) NOT NULL PRIMARY KEY,
    NGAYBD DATE,
    NGAYKT DATE
)
--TAO BANG NV_DA (MaDA, MaNV)
CREATE TABLE NV_DA
(
    MADA NCHAR(10) NOT NULL,
    MANV NCHAR(10) NOT NULL,
    PRIMARY KEY(MADA,MANV),
    CONSTRAINT FK_MADA_NV FOREIGN KEY (MADA) REFERENCES DUAN(MADA),
    CONSTRAINT FK_MANV_NV FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV)
)
--THEM DU LIEU VAO BANG PHONG
INSERT PHONG
VALUES('MP1','PHONG1'),('MP2','PHONG2'),('MP3','PHONG3'),('MP4','PHONG4'),('MP5','PHONG5')
--THEM DU LIEU VAO BANG NHAN VIEN
INSERT NHANVIEN
VALUES('NV1','NGUYEN VAN SANG','7/30/2000','BAC NINH','MP1',5000000,'TP1'),
('NV2','PHUNG QUANG HUY','1/7/2000','HA GIANG','MP1',6000000,'TP2'),
('NV3','BUI TOAI NGUYEN','1/11/2000','HOA BINH','MP2',5000000,'TP3'),
('NV4','NGUYEN TUAN MANH','8/6/2000','HA NOI','MP3',5500000,'TP4'),
('NV5','TAO PHUONG QUYNH','12/2/2000','THANH HOA','MP4',5000000,'TP5'),
('NV6','PHAM THANH VINH','4/4/2000','HA NOI','MP1',5000000,'TP4'),
('NV7','TRAN THU LIEU','3/1/2000','NAM DINH','MP1',5000000,'TP6')
INSERT DUAN
VALUES('DUAN1','1/1/2019','1/1/2020'),('DUAN2','9/1/2019','11/1/2020'),('DUAN3','8/1/2019','12/3/2020'),
('DUAN4','7/1/2019','4/5/2020')
INSERT NV_DA
VALUES('DUAN1','NV1'),('DUAN1','NV2'),('DUAN1','NV3'),('DUAN2','NV4'),('DUAN2','NV5'),('DUAN4','NV6'),('DUAN4','NV7')
/*
Câu 1: Viết một SP để hiển thị danh sách nhân viên của một phòng nào đó. Thực hiện
SP đó để hiển thị nhân viên của phòng ‘KT’
*/
GO
CREATE PROCEDURE DS_PHONG @TENP NCHAR(30)
AS BEGIN
SELECT NHANVIEN.HOTEN FROM NHANVIEN
INNER JOIN PHONG ON NHANVIEN.MAP=PHONG.MAP
WHERE PHONG.TENP=@TENP
END
EXECUTE DS_PHONG 'PHONG1'
/*
Câu 2: Viết một SP để tính tổng số nhân viên của một phòng nào đó. Tổng số nhân
viên được lưu vào tham số output của SP đó.
*/
GO 
CREATE PROCEDURE SUM_NV @TENP NCHAR(10),@TONGNV INT OUTPUT
AS BEGIN
DECLARE @MAP NCHAR(5)
SELECT @MAP=MAP FROM PHONG
WHERE @TENP=TENP
SELECT @TONGNV= COUNT(*) FROM NHANVIEN
WHERE @MAP=MAP
END
GO
DECLARE @TONGNV INT,@TENP NCHAR(10)
EXECUTE SUM_NV 'PHONG1',@TONGNV OUTPUT
PRINT 'TONG SO NHAN VIEN'+': '+CAST(@TONGNV AS NCHAR(5))
/*
Câu 3: Viết một SP để chuyển tất cả những nhân viên từ phòng A sang phòng B. Biết
rằng A và B mang giá trị của 2 phòng bất kỳ trong CSDL.
*/
SELECT * FROM PHONG
GO 
CREATE PROCEDURE CHUYEN_NHANVIEN @TENPHONG1 NCHAR(10),@TENPHONG2 NCHAR(10)
AS BEGIN
DECLARE @MP1 NCHAR(10),@MP2 NCHAR(10)
SELECT @MP1 =MAP FROM PHONG
WHERE TENP=@TENPHONG1
SELECT @MP2=MAP FROM PHONG
WHERE TENP=@TENPHONG2
UPDATE NHANVIEN
SET MAP=@MP2
WHERE MAP=@MP1
END
EXECUTE CHUYEN_NHANVIEN 'PHONG1','PHONG2'
SELECT * FROM NHANVIEN
/*
Câu 4: Viết một Sp để hoán đổi giá trị của 2 tham số x và y.
*/
GO 
CREATE PROCEDURE HOANDOI @X FLOAT OUTPUT ,@Y FLOAT OUTPUT,@BIEN FLOAT
AS BEGIN
SET @BIEN=@X
SET @X=@Y
SET @Y=@X
END
GO
DECLARE @X FLOAT,@Y FLOAT
EXECUTE HOANDOI 5,10,@X OUTPUT,@Y OUTPUT
PRINT 'GIA TRI CUA X SAU KHI DOI LA:'+CAST(@X AS NCHAR(5))
PRINT 'GIA TRI CUA Y SAU KHI DOI LA:'+CAST(@Y AS NCHAR(5))

/*
Câu 5: Viết một SP có một tham số trả về chứa tổng của x và y.
*/
GO
CREATE PROCEDURE TONG_2SO_XY @X FLOAT,@Y FLOAT,@BIENTONG FLOAT OUTPUT
AS BEGIN
SET @BIENTONG=@X+@Y
END
GO
DECLARE @BIENTONG FLOAT
EXECUTE TONG_2SO_XY 3.9,6.2,@BIENTONG OUTPUT
PRINT 'TONG 2 S0 LA:'+CAST(@BIENTONG AS NCHAR(5))
/*
Câu 6: Viết một hàm tính diện tích hình chữ nhật nếu biết hai cạnh.
*/
GO
CREATE FUNCTION S_HCN(@CHIEUDAI FLOAT,@CHIEURONG FLOAT)
RETURNS FLOAT 
AS BEGIN
DECLARE @S FLOAT
SET @S=@CHIEUDAI *@CHIEURONG
RETURN @S
END
GO
PRINT 'DIEN TICH CUA HCN LA: '+CAST(DBO.S_HCN(1.8,10) AS NCHAR(10))
--Câu 7: Viết một hàm để tính tổng số nhân viên của một phòng bất kỳ
GO
CREATE FUNCTION SUM_STAFF(@TENPHONG NCHAR(10))
RETURNS INT
AS BEGIN
DECLARE @TONGNV INT,@MAP NCHAR(10) 
SELECT @MAP=MAP FROM PHONG
WHERE TENP=@TENPHONG
SELECT @TONGNV=COUNT(*) FROM NHANVIEN
WHERE MAP=@MAP
RETURN @TONGNV
END
GO
PRINT 'SO NHAN VIEN CUA PHONG1 LA: '+ ': '+ CAST(DBO.SUM_STAFF('PHONG1') AS NCHAR(5))
--Câu 8: Viết một hàm để trả về danh sách nhân viên tham gia một dự án nào đó.
--CÁCH 1
GO
CREATE FUNCTION DS_NV_THAMGIA_DA (@MADA NCHAR(10))
RETURNS @BIEN1 TABLE(MANV NCHAR(10),HOTEN NCHAR(20))
AS BEGIN 
INSERT INTO @BIEN1
SELECT NHANVIEN.MANV,NHANVIEN.HOTEN FROM NHANVIEN,NV_DA
WHERE NHANVIEN.MANV=NV_DA.MANV AND NV_DA.MADA=@MADA 
RETURN
END
GO
SELECT * FROM DS_NV_THAMGIA_DA('DUAN2')
--CÁCH 2 
GO
CREATE FUNCTION DS_NV_THAMGIA_DA1 (@MADA NCHAR(10))
RETURNS TABLE
AS
RETURN (SELECT NHANVIEN.MANV,NHANVIEN.HOTEN FROM NHANVIEN,NV_DA WHERE NHANVIEN.MANV=NV_DA.MANV AND @MADA=NV_DA.MADA)
GO
SELECT * FROM DS_NV_THAMGIA_DA1('DUAN1')
--Câu 9: Viết một hàm trả về giá trị thứ trong tuần của một kiểu datetime. Sử dụng hàm đó để lấy ra những nhân viên sinh vào ‘Chủ nhật’.
GO
CREATE FUNCTION THU_TRONG_TUAN(@DATE DATETIME)
RETURNS INT
AS BEGIN
RETURN DATEPART(DW,@DATE)
END
GO
SELECT * FROM NHANVIEN WHERE DBO.THU_TRONG_TUAN(NGAYSINH)=1
--SỐ 1 LÀ CHỦ NHẬT, SỐ 2 LÀ THỨ 2...
/*
Câu 10: Viết một hàm trả về danh sách nhân viên của một phòng bất kỳ. Nếu mã
phòng không có trong CSDL thì hiển thi tất cả cả các nhân viên theo từng phòng.
*/
GO
CREATE FUNCTION DS_NV_PHONG(@MAP NCHAR(10))
RETURNS @BIEN2 TABLE (MANV NCHAR(10),HOTEN NCHAR(20),MaP NCHAR(10))
AS BEGIN
    IF(@MAP IN (SELECT DISTINCT MAP FROM NHANVIEN))
        INSERT INTO @BIEN2
        SELECT MANV,HOTEN,MAP FROM NHANVIEN
        WHERE @MAP=MAP
    ELSE
        INSERT INTO @BIEN2
        SELECT MANV,HOTEN,MAP FROM NHANVIEN
    RETURN
END
GO
SELECT * FROM DBO.DS_NV_PHONG('MP1')
GO
SELECT * FROM DBO.DS_NV_PHONG('MP21')

/*Câu 11: Tạo một view chứa MaNv, Hoten, Diachi của nhân viên. Thử thực hiện các
thao tác insert, delete, update trên view đó rồi xem dữ liệu trên bảng mà view đó tham
chiếu có thay đổi gì không?
*/
GO
CREATE VIEW THONGTINNV
AS
SELECT MANV,HOTEN,DIACHI FROM NHANVIEN
GO
INSERT INTO THONGTINNV(MANV,HOTEN,DIACHI) 
VALUES('NV11','NGUYEN HOANG PHONG','BAC NINH')
--KHÔNG THỂ INSERT VÀO VIEW THONGTINNV DO BẢNG NHÂN VIÊN CÓ THUỘC TÍNH MATP(KHÔNG NẰM TRONG VIEW) NOT NULL
DELETE FROM THONGTINNV
WHERE MANV='NV1'
--KHÔNG THỂ XÓA NHÂN VIÊN CÓ MÃ NV LÀ 'NV1' DO CÓ RẰNG BUỘC VỀ KHÓA NGOẠI Ở BẢNG NV_DA
UPDATE THONGTINNV
SET HOTEN=N'NGUYỄN VĂN SANG'
WHERE MANV='NV1'
--SAU KHI CẬP NHẬT VIEW THÌ BẢNG NHÂN VIÊN CŨNG THAY ĐỔI
/*
Câu 12: Tạo một view chứa MaNV, Hoten, Tuổi của nhân viên. Thử thực hiện các
thao tác insert, delete, update trên view đó rồi xem dữ liệu trên bảng mà view đó tham
chiếu có thay đổi gì không?
*/
GO
CREATE VIEW DSNV1(MANV,HOTEN,TUOI)
AS
SELECT MANV,HOTEN,DATEDIFF(YY,NGAYSINH,GETDATE()) FROM NHANVIEN
GO
SELECT * FROM DSNV1
INSERT DSNV1
VALUES('NV100','NGUYEN HOANG PHONG','20')
--Không thể insert vào view bởi vì cột tuổi không nằm trong bảng cơ sở đã tạo trước đó
DELETE FROM DSNV1
WHERE MANV='NV2'
--The DELETE statement conflicted with the REFERENCE constraint "FK__NV_DA__MANV__3E52440B". The conflict occurred in database "QUANLYNV", table "dbo.NV_DA", column 'MANV'.
--KHÔNG THỂ XÓA NHÂN VIÊN CÓ MÃ NV LÀ 'NV1' DO CÓ RẰNG BUỘC VỀ KHÓA NGOẠI Ở BẢNG NV_DA
UPDATE DSNV1
SET TUOI='20'
WHERE MANV='NV3'
--Không thể update một cột không có trong bảng cơ sở trước đó nhưng nếu chúng ta update cột manv và hoten thì bảng nhanvien sẽ thay đổi
/*
Câu 13: Tạo một view chứa MaNV, Hoten, TenP của nhân viên Thử thực hiện các
thao tác insert, delete, update trên view đó rồi xem dữ liệu trên bảng mà view đó tham
chiếu có thay đổi gì không?
*/
GO
CREATE VIEW DSNV2
AS 
SELECT MANV,HOTEN,TENP FROM NHANVIEN,PHONG
WHERE NHANVIEN.MAP=PHONG.MAP
--
GO
SELECT * FROM DSNV2
INSERT DSNV2
VALUES('NV9','NGUYEN HOANG PHONG','PHONG1')
--
DELETE FROM DSNV2
WHERE MANV='NV1'
--
UPDATE DSNV2
SET TENP='PHONG11'
WHERE MANV='NV1'
--Không thể insert và delete do các thao tác này tác động đến nhiều bảng cơ sở nhưng update thì vẫn có thể làm thay đổi giá trị trong bảng